{"version":3,"sources":["App.jsx","index.js"],"names":["winnerLine","App","state","sqares","Array","fill","count","clickHandler","e","data","target","getAttribute","currentState","setState","isWinner","s","i","line","alert","setTimeout","this","className","map","sqare","key","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"mMAGMA,G,MAAa,CACjB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGYC,E,4MACnBC,MAAQ,CACNC,OAAQC,MAAM,GAAGC,KAAK,MACtBC,MAAO,G,EAGTC,aAAe,SAACC,GACd,IAAMC,EAAOD,EAAEE,OAAOC,aAAa,QAC7BC,EAAe,EAAKV,MAAMC,OAE5BS,EAAaH,KAGjBG,EAAaH,GAAQ,EAAKP,MAAMI,MAAQ,IAAM,EAAI,IAAM,IAExD,EAAKO,SAAS,CACZV,OAAQS,EACRN,MAAO,EAAKJ,MAAMI,MAAQ,IAE5B,EAAKQ,a,EAGPA,SAAW,WAGT,IAFA,IAAMC,EAAI,EAAKb,MAAMI,MAAQ,IAAM,EAAI,IAAM,IAEpCU,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAOjB,EAAWgB,GAEpB,EAAKd,MAAMC,OAAOc,EAAK,MAAQF,GAC/B,EAAKb,MAAMC,OAAOc,EAAK,MAAQF,GAC/B,EAAKb,MAAMC,OAAOc,EAAK,MAAQF,IAE/BG,MAAM,2DACNC,YAAW,WACT,EAAKN,SAAS,CAAEV,OAAQC,MAAM,GAAGC,KAAK,MAAOC,MAAO,MACnD,Q,uDAKC,IAAD,OACCH,EAAWiB,KAAKlB,MAAhBC,OAER,OACE,yBAAKkB,UAAU,eACZlB,EAAOmB,KAAI,SAACC,EAAOP,GAAR,OACV,yBACEK,UAAU,WACVG,IAAKR,EACLP,KAAMO,EACNS,QAAS,EAAKlB,cAEbJ,EAAOa,Y,GApDaU,aCVjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.60c6918e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst winnerLine = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [2, 4, 6],\r\n];\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    sqares: Array(9).fill(null),\r\n    count: 0,\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    const data = e.target.getAttribute(\"data\");\r\n    const currentState = this.state.sqares;\r\n\r\n    if (currentState[data]) {\r\n      return;\r\n    }\r\n    currentState[data] = this.state.count % 2 === 0 ? \"x\" : \"0\";\r\n\r\n    this.setState({\r\n      sqares: currentState,\r\n      count: this.state.count + 1,\r\n    });\r\n    this.isWinner();\r\n  };\r\n\r\n  isWinner = () => {\r\n    const s = this.state.count % 2 === 0 ? \"x\" : \"0\";\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n      let line = winnerLine[i];\r\n      if (\r\n        this.state.sqares[line[0]] === s &&\r\n        this.state.sqares[line[1]] === s &&\r\n        this.state.sqares[line[2]] === s\r\n      ) {\r\n        alert(\"Вы виграли\");\r\n        setTimeout(() => {\r\n          this.setState({ sqares: Array(9).fill(null), count: 0 });\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { sqares } = this.state;\r\n\r\n    return (\r\n      <div className=\"tic-tac-toe\">\r\n        {sqares.map((sqare, i) => (\r\n          <div\r\n            className=\"ttt-grid\"\r\n            key={i}\r\n            data={i}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {sqares[i]}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}